<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gungnir</title>
  <icon>https://www.gravatar.com/avatar/ae16377bb6093616b115387336cadff6</icon>
  <subtitle>临渊羡鱼，不如退而结网</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="csy1998.com/"/>
  <updated>2018-11-13T03:15:56.374Z</updated>
  <id>csy1998.com/</id>
  
  <author>
    <name>Gungnir</name>
    <email>csy221998@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NLP论文笔记</title>
    <link href="csy1998.com/2018/11/12/16_NLP%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"/>
    <id>csy1998.com/2018/11/12/16_NLP论文笔记/</id>
    <published>2018-11-11T16:00:00.000Z</published>
    <updated>2018-11-13T03:15:56.374Z</updated>
    
    <content type="html"><![CDATA[<h3 id="NLP论文笔记"><a href="#NLP论文笔记" class="headerlink" title="NLP论文笔记"></a>NLP论文笔记</h3><h6 id="1-Sequence-to-Sequence-Learning-with-Neural-Networks"><a href="#1-Sequence-to-Sequence-Learning-with-Neural-Networks" class="headerlink" title="1.Sequence to Sequence Learning with Neural Networks"></a>1.Sequence to Sequence Learning with Neural Networks</h6><ul><li><code>encoder</code>以及<code>decoder</code>都采用<code>LSTM</code>模型</li><li>模型很简单，就是最普通的多层<code>LSTM</code></li><li>实现的不同之处：<ul><li>用两种不同的<code>LSTM</code>，一种处理输入序列，一种处理输出序列；以可忽略的计算成本增加参数数量，同时在多个语言对上训练<code>LSTM</code>；</li><li>更深的<code>LSTM</code>会比浅的效果更好，故论文模型选择了四层；</li><li>将输入的序列翻转之后作为输入效果提升；<a id="more"></a></li></ul></li><li><code>decoder</code>应用了beam search来提升效果（每次生成词是取使得整个概率最高的前k个词作为候选）；beam size越大，效果越好，同时计算代价增大；</li><li>关于倒序输入效果提升：<code>rnn</code>是有偏模型，顺序越靠后的单词在最终占据的信息量越大，正序时最后一个词对应的state作为<code>decoder</code>的输入来预测第一个词，在<code>alignment</code>上来看显然这两个词并不是对齐的；倒序的话，<code>first word</code>成了<code>last word</code>，在<code>last state</code>中占据了主导，来预测<code>decoder</code>的第一个词，从某种意义上说实现了<code>alignment</code>，故效果提升；</li><li><code>decoder</code>本质上是一个<code>rnn</code>语言模型，不同的是在生成词的时候依赖于<code>encoder</code>的最后一个<code>hidden state</code>：</li></ul><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fwlx2k8vilj30l003aq32.jpg" alt=""></p><ul><li>参考资料：</li><li>Sequence to Sequence Learning with Neural Networks</li><li><a href="https://zhuanlan.zhihu.com/p/26985192" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/26985192</a></li></ul><h6 id="2-Convolutional-Sequence-to-Sequence-Learning"><a href="#2-Convolutional-Sequence-to-Sequence-Learning" class="headerlink" title="2.Convolutional Sequence to Sequence Learning"></a>2.Convolutional Sequence to Sequence Learning</h6><ul><li>Seq2Seq 先把语句转换为一组词向量，通过对词向量的剪辑，提炼出语义向量。但对于如何剪辑有争议。有人提议使用<code>LSTM</code>等循环模型（RNN），来实现语义剪辑。RNN 模型的剪辑手段是：记忆门、遗忘门、和输出门。</li><li>RNN 模型的突出优势，是很好地解决了长距离依赖的难题；</li><li>作者使用<code>CNN</code>取代<code>RNN</code>循环模型，训练速度提高9倍，精度超越<code>RNN</code>；</li><li><strong>为什么更快？</strong><ul><li>卷积并行处理，而循环只能顺序处理，多个机器同时并行训练卷积模型，速度比串行训练循环模型快很多；</li><li>可用<code>GPU</code>芯片来加速卷积模型的训练，而暂时还没有硬件能够加速<code>RNN</code>的训练；</li></ul></li><li><strong>为什么更准？</strong><ul><li><code>CNN</code>的层层抽象，与<code>RNN</code>的三重门，其实异曲同工。虽手段不同，但目的都是忽略次要内容，传承重要内容。所以在精度方面二者差距不大； </li><li>但是层级结构与循环网络链结构相比，提供了一种较短的路径来捕获词之间远程的依赖关系，因此也可以更好地捕捉更复杂的关系；</li><li><code>Facebook translate</code> 与<code>Google translate</code>的精度差异，应该是由于<code>attention</code>的改进引起的；<ul><li><code>Google Translate</code>的解码器使用单层<code>LSTM</code>模型，故<code>attention</code>也是单层的；<code>Facebook</code>的解码器使用<code>CNN</code>模型，是多层的，<code>attention</code> 是多跳的（multi-hop）；越是底层的<code>attention</code>越聚焦，细节越丰富；越是高层的<code>attention</code>，视野越开阔，抽象程度越高，越能抓住文章主旨；</li><li><code>Google Translate</code>使用的<code>attention</code>，依赖于编码器生成的语义向量，而不依赖于输入的原生态的词向量。而<code>Facebook</code>的<code>attention</code>，对语义向量和原生态词向量兼收并取；语义向量负责把握主旨，保证解码器的输出不偏题；原生态词向量关注措辞，保障解码器的输出用词得当；</li></ul></li></ul></li><li>将来<code>attention</code>的机制，还得融入规则。论文里只理解字面意思的<code>attention</code>的计算方式，无法理解“画外音”、“引经据典”、“含沙射影”的联想型语句。要正确理解“引经据典”和“含沙射影”，将来<code>attention</code>机制，还得融入知识图谱（张俊的猜想）；</li><li>模型结构：<code>encoder-decoder</code> +<code>attention</code>模块<ul><li>encoder 和 decoder采用了相同的卷积结构</li><li>非线性部分采用门控结构<code>GLM</code>；</li><li><code>attention</code>采用多跳注意<code>multi-hop attention</code>，即在<code>decoder</code>的每一个卷积层都会进行<code>attention</code>操作，并将结果输入到下一层；</li></ul></li></ul><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fwmltl8t76j30lm0nxq5u.jpg" alt=""></p><ul><li><p>步骤：</p><ul><li><p><strong>1.Position Embeddings</strong></p><ul><li><p>词向量：<img src="http://www.zhihu.com/equation?tex=w+%3D+%28w_1%2C...%2Cw_n+%29" alt="w = (w_1,...,w_n )"></p><p>位置向量：<img src="http://www.zhihu.com/equation?tex=p+%3D%28p_1%2C...%2Cp_n%29" alt="p =(p_1,...,p_n)"></p><p>最终表示向量：(输入表示向量)<img src="http://www.zhihu.com/equation?tex=e%3D%28w_1%2Bp_1%2C...%2Cw_n%2Bp_n%29" alt="e=(w_1+p_1,...,w_n+p_n)"> （输出表示向量g)</p></li></ul></li><li><p><strong>2、Convolutional Block Structure</strong></p><ul><li><p>一次“卷积计算+非线性计算”看作一个单元<code>Convolutional Block</code>，单元在一个卷积层内共享；</p></li><li><p><strong>卷积计算：</strong>卷积核的大小为<img src="http://www.zhihu.com/equation?tex=W%5E%7Bkd%2A2d%7D" alt="W^{kd*2d}">，d为词向量长度，k为卷积窗口大小，每次卷积生成两列d维向量<img src="http://www.zhihu.com/equation?tex=Y+%3D%5BA%2CB%5D%5Cin+R%5E%7B2d%7D" alt="Y =[A,B]\in R^{2d}">；</p></li><li><p><strong>非线性计算：</strong>门控结构<code>GLM</code><img src="http://www.zhihu.com/equation?tex=v%28%5BA%2CB%5D%29+%3D+A+%5Cotimes+++%5Cdelta%28B%29" alt="v([A,B]) = A \otimes   \delta(B)"></p></li><li><p><strong>残差连接：</strong>把输入与输出相加，输入到下一层网络中。</p><p><img src="http://www.zhihu.com/equation?tex=h%5El_i+%3Dv%28W%5El%5Bh%5E%7Bl-1%7D_%7Bi-k%2F2%7D+%2C...%2Ch%5E%7Bl-1%7D_%7Bi%2Bk%2F2%7D+%5D%2Bb%5El+%29%2Bh%5E%7Bl-1%7D_i" alt="h^l_i =v(W^l[h^{l-1}_{i-k/2} ,...,h^{l-1}_{i+k/2} ]+b^l )+h^{l-1}_i"></p><h6 id="图示：单层Block的情况"><a href="#图示：单层Block的情况" class="headerlink" title="图示：单层Block的情况"></a>图示：单层Block的情况</h6><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fx5kqwnp5rj30r80bc3zm.jpg" alt=""></p><h6 id="图示：多层block；堆叠后第三层的每个输出都与输入中的7列有关"><a href="#图示：多层block；堆叠后第三层的每个输出都与输入中的7列有关" class="headerlink" title="图示：多层block；堆叠后第三层的每个输出都与输入中的7列有关"></a>图示：多层block；堆叠后第三层的每个输出都与输入中的7列有关</h6><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fx5krb5bgyj30bu0cy0tg.jpg" alt=""></p></li><li><p><strong>输出：</strong>decoder的最后一层卷积层最后一个单元输出经过softmax得到下一个目标词的概率：</p><p>​                        <img src="http://www.zhihu.com/equation?tex=p%28y_%7Bi%2B1%7D%7Cy_1%2C+.+.+.+%2C+y_i%2C+x%29+%3D+softmax%28W_o+h%5EL_i+%2B+b_o%29+" alt="p(y_{i+1}|y_1, . . . , y_i, x) = softmax(W_o h^L_i + b_o) "></p></li></ul></li><li><p><strong>3、Multi-step Attention</strong></p><ul><li><p>原理与传统的<code>attention</code>相似，权重由<code>decoder</code>的当前输出<img src="http://www.zhihu.com/equation?tex=h_i" alt="h_i">和<code>encoder</code>的所有输出共同决定，利用该权重<img src="http://www.zhihu.com/equation?tex=a_%7Bij%7D%5El" alt="a_{ij}^l">对<code>encoder</code>的输出进行加权，得到表示输入句子信息的向量<img src="http://www.zhihu.com/equation?tex=c_i" alt="c_i">，<img src="http://www.zhihu.com/equation?tex=c_i" alt="c_i">和<img src="http://www.zhihu.com/equation?tex=h_i" alt="h_i">相加组成新的<img src="http://www.zhihu.com/equation?tex=h_i" alt="h_i">；</p><p>​                       <img src="https://ws2.sinaimg.cn/large/006tNbRwly1fx5ksy5f7zj309c0223yi.jpg" alt="">                </p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fx5kt6ud1ij30b803caa9.jpg" alt=""></p></li></ul></li></ul></li></ul><pre><code>  ![](https://ws3.sinaimg.cn/large/006tNbRwly1fx5ktetzqtj309c03mglo.jpg)</code></pre><ul><li>参考资料<ul><li>Convolutional Sequence to Sequence Learning</li><li><a href="https://zhuanlan.zhihu.com/p/26918935" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/26918935</a></li><li><a href="https://zhuanlan.zhihu.com/p/27464080" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/27464080</a></li></ul></li></ul><h6 id="2-Attention-Is-All-You-Need"><a href="#2-Attention-Is-All-You-Need" class="headerlink" title="2.Attention Is All You Need"></a>2.Attention Is All You Need</h6><ul><li><p>大框架：</p><p><img src="https://jalammar.github.io/images/t/The_transformer_encoders_decoders.png" alt="img"></p><p><img src="https://jalammar.github.io/images/t/The_transformer_encoder_decoder_stack.png" alt="img"></p></li></ul><h6 id="encoder的输出，会和每一层的decoder进行结合"><a href="#encoder的输出，会和每一层的decoder进行结合" class="headerlink" title="encoder的输出，会和每一层的decoder进行结合"></a>encoder的输出，会和每一层的decoder进行结合</h6><p>  <img src="https://jalammar.github.io/images/t/Transformer_decoder.png" alt="img"></p><h6 id="Encoder和Decoder的内部结构"><a href="#Encoder和Decoder的内部结构" class="headerlink" title="Encoder和Decoder的内部结构"></a>Encoder和Decoder的内部结构</h6><ul><li><p>细节：<strong>Multi-Head Attention(Self-Attention) 与 Scaled Dot-Product Attention</strong></p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fwmm6219jaj30rs0f241f.jpg" alt=""></p><ul><li><strong>从Scaled Dot-Product Attention到Multi-Head Attention</strong></li></ul></li></ul><p><img src="https://jalammar.github.io/images/t/transformer_self_attention_vectors.png" alt="img"></p><h6 id="输入：两个单词-Thinking-Machines-通过嵌入变换得到X1-X2两个向量-1-x-4-。分别与Wq-Wk-Wv三个矩阵-4x3-点乘得到，-q1-q2-k1-k2-v1-v2-6个向量-1x3-；"><a href="#输入：两个单词-Thinking-Machines-通过嵌入变换得到X1-X2两个向量-1-x-4-。分别与Wq-Wk-Wv三个矩阵-4x3-点乘得到，-q1-q2-k1-k2-v1-v2-6个向量-1x3-；" class="headerlink" title="输入：两个单词(Thinking, Machines)通过嵌入变换得到X1,X2两个向量[1 x 4]。分别与Wq,Wk,Wv三个矩阵[4x3]点乘得到，{q1,q2},{k1,k2},{v1,v2} 6个向量[1x3]；"></a>输入：两个单词(Thinking, Machines)通过嵌入变换得到X1,X2两个向量[1 x 4]。分别与Wq,Wk,Wv三个矩阵[4x3]点乘得到，{q1,q2},{k1,k2},{v1,v2} 6个向量[1x3]；</h6><p><img src="https://jalammar.github.io/images/t/transformer_self_attention_score.png" alt="img"></p><h6 id="向量-q1-k1-做点乘得到得分-Score-112，-q1-k2-做点乘得到得分96；"><a href="#向量-q1-k1-做点乘得到得分-Score-112，-q1-k2-做点乘得到得分96；" class="headerlink" title="向量{q1,k1}做点乘得到得分(Score) 112，{q1,k2}做点乘得到得分96；"></a>向量{q1,k1}做点乘得到得分(Score) 112，{q1,k2}做点乘得到得分96；</h6><p><img src="https://jalammar.github.io/images/t/self-attention_softmax.png" alt="img"></p><h6 id="对该得分进行规范-除以8-。论文解释是为了使得梯度更稳定（工程问题没什么好解释的）；之后对得分『14，12』做softmax得到比例『0-88，0-12』；"><a href="#对该得分进行规范-除以8-。论文解释是为了使得梯度更稳定（工程问题没什么好解释的）；之后对得分『14，12』做softmax得到比例『0-88，0-12』；" class="headerlink" title="对该得分进行规范(除以8)。论文解释是为了使得梯度更稳定（工程问题没什么好解释的）；之后对得分『14，12』做softmax得到比例『0.88，0.12』；"></a>对该得分进行规范(除以8)。论文解释是为了使得梯度更稳定（工程问题没什么好解释的）；之后对得分『14，12』做softmax得到比例『0.88，0.12』；</h6><p><img src="https://jalammar.github.io/images/t/self-attention-output.png" alt="img"></p><h6 id="得分比例「0-88-0-12」乘-v1-v2-值-Values-得到一个加权后的值，加起来得到z1就是这一层的输出。用Q-K去计算一个thinking对与-thinking-machine-的权重，用权重乘以-thinking-machine-的V得到加权后的-thinking-machine-的V-最后求和得到针对各单词的输出Z；"><a href="#得分比例「0-88-0-12」乘-v1-v2-值-Values-得到一个加权后的值，加起来得到z1就是这一层的输出。用Q-K去计算一个thinking对与-thinking-machine-的权重，用权重乘以-thinking-machine-的V得到加权后的-thinking-machine-的V-最后求和得到针对各单词的输出Z；" class="headerlink" title="得分比例「0.88 0.12」乘[v1 v2]值(Values)得到一个加权后的值，加起来得到z1就是这一层的输出。用Q,K去计算一个thinking对与[thinking, machine]的权重，用权重乘以[thinking,machine]的V得到加权后的[thinking,machine]的V,最后求和得到针对各单词的输出Z；"></a>得分比例「0.88 0.12」乘[v1 v2]值(Values)得到一个加权后的值，加起来得到z1就是这一层的输出。用Q,K去计算一个thinking对与[thinking, machine]的权重，用权重乘以[thinking,machine]的V得到加权后的[thinking,machine]的V,最后求和得到针对各单词的输出Z；</h6><p><img src="https://jalammar.github.io/images/t/self-attention-matrix-calculation.png" alt="img"></p><h6 id="展示矩阵运算的例子：输入是一个-2x4-的矩阵（单词嵌入），每个运算是-4x3-的矩阵，求得Q-K-V；"><a href="#展示矩阵运算的例子：输入是一个-2x4-的矩阵（单词嵌入），每个运算是-4x3-的矩阵，求得Q-K-V；" class="headerlink" title="展示矩阵运算的例子：输入是一个[2x4]的矩阵（单词嵌入），每个运算是[4x3]的矩阵，求得Q,K,V；"></a>展示矩阵运算的例子：输入是一个[2x4]的矩阵（单词嵌入），每个运算是[4x3]的矩阵，求得Q,K,V；</h6><p><img src="https://jalammar.github.io/images/t/self-attention-matrix-calculation-2.png" alt="img"></p><h6 id="Z是一个考虑过thinking周围单词-machine-的输出；"><a href="#Z是一个考虑过thinking周围单词-machine-的输出；" class="headerlink" title="Z是一个考虑过thinking周围单词(machine)的输出；"></a>Z是一个考虑过thinking周围单词(machine)的输出；</h6><p><img src="http://www.zhihu.com/equation?tex=Attention%28Q%2CK%2CV%29+%3D+softmax%28%5Cfrac%7BQK%5ET%7D%7B%5Csqrt%7Bd_k%7D%7D%29V+" alt="Attention(Q,K,V) = softmax(\frac{QK^T}{\sqrt{d_k}})V "></p><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fwmqnxii0jj30go0epjrq.jpg" alt=""></p><h6 id="Q·K-T其实就会组成一个-word2word-的-attention-map-每一个单词就对应每一个单词有一个权重，encoder里面是叫self-attention，decoder里面是叫masked-self-attention；"><a href="#Q·K-T其实就会组成一个-word2word-的-attention-map-每一个单词就对应每一个单词有一个权重，encoder里面是叫self-attention，decoder里面是叫masked-self-attention；" class="headerlink" title="Q·K.T其实就会组成一个 word2word 的 attention map ,每一个单词就对应每一个单词有一个权重，encoder里面是叫self-attention，decoder里面是叫masked self-attention；"></a>Q·K.T其实就会组成一个 word2word 的 attention map ,每一个单词就对应每一个单词有一个权重，encoder里面是叫self-attention，decoder里面是叫masked self-attention；</h6><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fwmqp4hpkrj30go0f2mxf.jpg" alt=""></p><h6 id="masked就是要在做language-modelling（或者像翻译）的时候，沿着对角线把灰色的区域用0覆盖掉，不给模型看到未来的信息；"><a href="#masked就是要在做language-modelling（或者像翻译）的时候，沿着对角线把灰色的区域用0覆盖掉，不给模型看到未来的信息；" class="headerlink" title="masked就是要在做language modelling（或者像翻译）的时候，沿着对角线把灰色的区域用0覆盖掉，不给模型看到未来的信息；"></a>masked就是要在做language modelling（或者像翻译）的时候，沿着对角线把灰色的区域用0覆盖掉，不给模型看到未来的信息；</h6><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fwmqqco07mj30go0f30t8.jpg" alt=""></p><h6 id="softmax后就横轴合为1"><a href="#softmax后就横轴合为1" class="headerlink" title="softmax后就横轴合为1"></a>softmax后就横轴合为1</h6><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fwmquw2pb3j30go08ymxt.jpg" alt=""></p><h6 id="self-attention的一个问题：若输入句子很长，NxN的attention-map会导致内存爆炸。则应该减少batch-size多gpu训练，或剪断输入的长度，或是用conv对K-V做卷积减少长度；"><a href="#self-attention的一个问题：若输入句子很长，NxN的attention-map会导致内存爆炸。则应该减少batch-size多gpu训练，或剪断输入的长度，或是用conv对K-V做卷积减少长度；" class="headerlink" title="self-attention的一个问题：若输入句子很长，NxN的attention map会导致内存爆炸。则应该减少batch size多gpu训练，或剪断输入的长度，或是用conv对K,V做卷积减少长度；"></a>self-attention的一个问题：若输入句子很长，NxN的attention map会导致内存爆炸。则应该减少batch size多gpu训练，或剪断输入的长度，或是用conv对K,V做卷积减少长度；</h6><p>​    <img src="https://jalammar.github.io/images/t/transformer_attention_heads_z.png" alt="img"></p><h6 id="Multi-Head-Attention就是把上面的过程做H次，然后把输出Z合起来；"><a href="#Multi-Head-Attention就是把上面的过程做H次，然后把输出Z合起来；" class="headerlink" title="Multi-Head Attention就是把上面的过程做H次，然后把输出Z合起来；"></a>Multi-Head Attention就是把上面的过程做H次，然后把输出Z合起来；</h6><p><img src="https://jalammar.github.io/images/t/transformer_attention_heads_weight_matrix_o.png" alt="img"></p><h6 id="为了使得输出与输入结构对称，乘一个线性W0得到Z"><a href="#为了使得输出与输入结构对称，乘一个线性W0得到Z" class="headerlink" title="为了使得输出与输入结构对称，乘一个线性W0得到Z"></a>为了使得输出与输入结构对称，乘一个线性W0得到Z</h6><ul><li><p><strong>Transformer</strong>的结构：</p><ul><li><strong>Transformer</strong>：由一个<code>encoder</code>, 一个<code>decoder</code>，一个<code>decoder</code>后的输出层<code>generator</code>，外加2个嵌入层<code>embedding</code>组成；</li></ul><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fwmr6op8e8j30uc17u7et.jpg" alt=""></p><ul><li><strong>Encoder</strong>层的结构：共N层，<code>add&amp;norm</code>就是一个简单的<code>layer normalization</code>外加残差网络的结合；</li><li><strong>Decoder</strong>层的结构：共N层；</li><li><strong>Generator</strong>：前向网络<code>Linear</code> + <code>softmax</code></li><li>关于<strong>Feed Forward</strong>：该网络的输入大小是可变的<img src="http://www.zhihu.com/equation?tex=n%5Ctimes+d_%7Bmodel%7D" alt="n\times d_{model}">（model可变），于是就独立作用在输入矩阵的每一列上的（<code>separately and identically</code>），其输入与输出都是<img src="http://www.zhihu.com/equation?tex=d_%7Bmodel%7D" alt="d_{model}">维的向量；</li></ul></li><li><p>优点：</p><ul><li><p>靠<code>attention</code>机制，不使用<code>RNN</code>和<code>CNN</code>，并行度高；</p></li><li><p>提出<code>self-attention</code>，自己和自己做<code>attention</code>，使得每个词都有全局的语义信息（长依赖）：由于<code>Self-Attention</code>是每个词和所有词都要计算<code>Attention</code>，所以不管他们中间有多长距离，最大的路径长度也都只是1，可以捕获长距离依赖关系；</p></li><li><p>提出<code>multi-head attention</code>，可以看成<code>attention</code>的<code>ensemble</code>版本，不同<code>head</code>学习不同的子空间语义；</p></li></ul></li></ul><ul><li><h6 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h6><h6 id="Attention-Is-All-You-Need"><a href="#Attention-Is-All-You-Need" class="headerlink" title="Attention Is All You Need"></a>Attention Is All You Need</h6><h6 id="https-jalammar-github-io-illustrated-transformer"><a href="#https-jalammar-github-io-illustrated-transformer" class="headerlink" title="https://jalammar.github.io/illustrated-transformer/"></a><a href="https://jalammar.github.io/illustrated-transformer/" target="_blank" rel="external">https://jalammar.github.io/illustrated-transformer/</a></h6><h6 id="https-zhuanlan-zhihu-com-p-39034683"><a href="#https-zhuanlan-zhihu-com-p-39034683" class="headerlink" title="https://zhuanlan.zhihu.com/p/39034683"></a><a href="https://zhuanlan.zhihu.com/p/39034683" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/39034683</a></h6></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;NLP论文笔记&quot;&gt;&lt;a href=&quot;#NLP论文笔记&quot; class=&quot;headerlink&quot; title=&quot;NLP论文笔记&quot;&gt;&lt;/a&gt;NLP论文笔记&lt;/h3&gt;&lt;h6 id=&quot;1-Sequence-to-Sequence-Learning-with-Neural-Networks&quot;&gt;&lt;a href=&quot;#1-Sequence-to-Sequence-Learning-with-Neural-Networks&quot; class=&quot;headerlink&quot; title=&quot;1.Sequence to Sequence Learning with Neural Networks&quot;&gt;&lt;/a&gt;1.Sequence to Sequence Learning with Neural Networks&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encoder&lt;/code&gt;以及&lt;code&gt;decoder&lt;/code&gt;都采用&lt;code&gt;LSTM&lt;/code&gt;模型&lt;/li&gt;
&lt;li&gt;模型很简单，就是最普通的多层&lt;code&gt;LSTM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;实现的不同之处：&lt;ul&gt;
&lt;li&gt;用两种不同的&lt;code&gt;LSTM&lt;/code&gt;，一种处理输入序列，一种处理输出序列；以可忽略的计算成本增加参数数量，同时在多个语言对上训练&lt;code&gt;LSTM&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;更深的&lt;code&gt;LSTM&lt;/code&gt;会比浅的效果更好，故论文模型选择了四层；&lt;/li&gt;
&lt;li&gt;将输入的序列翻转之后作为输入效果提升；
    
    </summary>
    
      <category term="计算机" scheme="csy1998.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="NLP" scheme="csy1998.com/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习</title>
    <link href="csy1998.com/2018/11/12/12_JavaScript%E5%AD%A6%E4%B9%A0/"/>
    <id>csy1998.com/2018/11/12/12_JavaScript学习/</id>
    <published>2018-11-11T16:00:00.000Z</published>
    <updated>2018-11-13T03:15:27.164Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JavaScript学习"><a href="#JavaScript学习" class="headerlink" title="JavaScript学习"></a>JavaScript学习</h3><h6 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h6><ul><li>JavaScript并不强制要求在每个语句的结尾加<code>;</code>，但是最好加；  </li><li>JavaScript不区分整数和浮点数，统一用Number表示；   </li><li>变量赋值<code>var</code>；     </li><li><code>==</code>比较，会自动转换数据类型再比较，可能会得到诡异结果，<code>false == 0; // true</code>；<code>===</code>比较，不会自动转换数据类型，若数据类型不一致，返回<code>false</code>，如果一致，再比较，<code>false === 0; // false</code>，所以不要使用<code>==</code>比较，始终坚持使用<code>===</code>比较；   </li><li><code>NaN</code>这个特殊的Number与所有其他值都不相等，包括它自己：<code>NaN === NaN; // false</code>； </li><li>浮点比较看精确度，不可以直接<code>===</code>；    <a id="more"></a></li><li><code>null</code>表示一个“空”的值，它和<code>0</code>以及空字符串<code>&#39;&#39;</code>不同，<code>0</code>是一个数值，<code>&#39;&#39;</code>表示长度为0的字符串，而<code>null</code>表示“空”；    </li><li>JavaScript的对象是一组由键-值组成的无序集合；    </li><li>ASCII字符可以以<code>\x##</code>形式的十六进制表示；    </li><li>模板字符串：${string_var}；    </li><li>JavaScript的数组越界不会报错，会增加<code>undefined</code>；    </li><li>空数组继续pop不会报错，而是返回<code>undefined</code>；    实际上JavaScript对象的所有属性都是字符串，不过属性对应的值可以是任意数据类型；    </li><li>JavaScript把<code>null</code>、<code>undefined</code>、<code>0</code>、<code>NaN</code>和空字符串<code>&#39;&#39;</code>视为<code>false</code>，其他值一概视为<code>true</code>；   </li><li><code>Array</code>、<code>Map</code>和<code>Set</code>都属于<code>iterable</code>类型；</li><li><code>for ... in</code>循环由于历史遗留问题，它遍历的实际上是对象的属性名称。一个<code>Array</code>数组实际上也是一个对象，它的每个元素的索引被视为一个属性；</li></ul><h6 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h6><ul><li>要指定函数的<code>this</code>指向哪个对象，可以用函数本身的<code>apply</code>方法，它接收两个参数，第一个参数就是需要绑定的<code>this</code>变量，第二个参数是<code>Array</code>，表示函数本身的参数；</li><li>注意函数的<code>map/reduce</code>属性；</li><li>注意<code>filter</code>；</li><li>注意<code>sort</code>，默认把所有元素先转换为String再排序，可自定义比较器function cmp(a,b){return a-b}；</li><li><code>=&gt;</code>函数、generator可以在执行过程中多次返回；</li></ul><h6 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h6><ul><li>不要使用<code>new Number()</code>、<code>new Boolean()</code>、<code>new String()</code>创建包装对象；  </li><li>用<code>parseInt()</code>或<code>parseFloat()</code>来转换任意类型到<code>number</code>；</li><li>用<code>String()</code>来转换任意类型到<code>string</code>，或者直接调用某个对象的<code>toString()</code>方法；</li><li>通常不必把任意类型转换为<code>boolean</code>再判断，因为可以直接写<code>if (myVar) {...}</code>；</li><li><code>typeof</code>操作符可以判断出<code>number</code>、<code>boolean</code>、<code>string</code>、<code>function</code>和<code>undefined</code>；</li><li>判断<code>Array</code>要使用<code>Array.isArray(arr)</code>；</li><li>判断<code>null</code>请使用<code>myVar === null</code>；</li><li>判断某个全局变量是否存在用<code>typeof window.myVar === &#39;undefined&#39;</code>；</li><li>函数内部判断某个变量是否存在用<code>typeof myVar === &#39;undefined&#39;</code>；</li></ul><h6 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h6><ul><li>数据类型：<ul><li>number</li><li>boolean</li><li>string</li><li>null</li><li>array</li><li>object</li></ul></li><li>字符集：UTF-8</li><li>字符串和Object的键必须用：<code>&quot;&quot;</code></li><li>序列化与反序列化</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;JavaScript学习&quot;&gt;&lt;a href=&quot;#JavaScript学习&quot; class=&quot;headerlink&quot; title=&quot;JavaScript学习&quot;&gt;&lt;/a&gt;JavaScript学习&lt;/h3&gt;&lt;h6 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;JavaScript并不强制要求在每个语句的结尾加&lt;code&gt;;&lt;/code&gt;，但是最好加；  &lt;/li&gt;
&lt;li&gt;JavaScript不区分整数和浮点数，统一用Number表示；   &lt;/li&gt;
&lt;li&gt;变量赋值&lt;code&gt;var&lt;/code&gt;；     &lt;/li&gt;
&lt;li&gt;&lt;code&gt;==&lt;/code&gt;比较，会自动转换数据类型再比较，可能会得到诡异结果，&lt;code&gt;false == 0; // true&lt;/code&gt;；&lt;code&gt;===&lt;/code&gt;比较，不会自动转换数据类型，若数据类型不一致，返回&lt;code&gt;false&lt;/code&gt;，如果一致，再比较，&lt;code&gt;false === 0; // false&lt;/code&gt;，所以不要使用&lt;code&gt;==&lt;/code&gt;比较，始终坚持使用&lt;code&gt;===&lt;/code&gt;比较；   &lt;/li&gt;
&lt;li&gt;&lt;code&gt;NaN&lt;/code&gt;这个特殊的Number与所有其他值都不相等，包括它自己：&lt;code&gt;NaN === NaN; // false&lt;/code&gt;； &lt;/li&gt;
&lt;li&gt;浮点比较看精确度，不可以直接&lt;code&gt;===&lt;/code&gt;；
    
    </summary>
    
      <category term="计算机" scheme="csy1998.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="编程学习" scheme="csy1998.com/tags/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>love story for Oct</title>
    <link href="csy1998.com/2018/10/15/15_letter_three/"/>
    <id>csy1998.com/2018/10/15/15_letter_three/</id>
    <published>2018-10-14T16:00:00.000Z</published>
    <updated>2018-11-13T03:19:45.220Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">「密码不能告诉你」</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      「这是一篇私密博客」
    
    </summary>
    
      <category term="丽丽" scheme="csy1998.com/categories/%E4%B8%BD%E4%B8%BD/"/>
    
    
      <category term="情书" scheme="csy1998.com/tags/%E6%83%85%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>love story for Sep</title>
    <link href="csy1998.com/2018/09/24/14_letter-two/"/>
    <id>csy1998.com/2018/09/24/14_letter-two/</id>
    <published>2018-09-23T16:00:00.000Z</published>
    <updated>2018-11-13T03:17:01.177Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">「密码不能告诉你」</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      「这是一篇私密博客」
    
    </summary>
    
      <category term="丽丽" scheme="csy1998.com/categories/%E4%B8%BD%E4%B8%BD/"/>
    
    
      <category term="情书" scheme="csy1998.com/tags/%E6%83%85%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>love story for Aug</title>
    <link href="csy1998.com/2018/08/17/13_letter-one/"/>
    <id>csy1998.com/2018/08/17/13_letter-one/</id>
    <published>2018-08-16T16:00:00.000Z</published>
    <updated>2018-11-13T03:16:53.214Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">「密码不能告诉你」</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    <summary type="html">
    
      「这是一篇私密博客」
    
    </summary>
    
      <category term="丽丽" scheme="csy1998.com/categories/%E4%B8%BD%E4%B8%BD/"/>
    
    
      <category term="情书" scheme="csy1998.com/tags/%E6%83%85%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>活着</title>
    <link href="csy1998.com/2018/04/26/10_%E6%B4%BB%E7%9D%80/"/>
    <id>csy1998.com/2018/04/26/10_活着/</id>
    <published>2018-04-25T16:00:00.000Z</published>
    <updated>2018-11-12T12:25:20.543Z</updated>
    
    <content type="html"><![CDATA[<p><strong>活着，写的是人对苦难的承受能力，和对世界乐观的态度。</strong></p><p>近来看了不少大陆“禁片”：李杨导演的《盲山》海外版，姜文导演的《太阳照常升起》和《阳光灿烂的日子》，之后想抽空看看《盲道》以及《鬼子来了》。阅毕，我对50到70年代的中国发生的事情愈发感到沉重，或许这样的事情，有些依然存在，有些已经稀少的可以忽略不计了，甚至已经不存在了，但是我觉得发生过的事，就不能闭上眼睛不去看它，而是应该以一种“敢于正视淋漓鲜血”的勇气去并深入地思考它。</p><p>这也正是我想重拾《活着》的原因之一。文革前后时期背景的作品，其实接触过一些，莫言先生的《蛙》《生死疲劳》，余华先生的《兄弟》《许三观卖血记》等，或者说在所有看过的文学作品中，这类题材的作品算是比较多的，也是每次阅读之后都久久难以忘却的。重温《活着》，让我再一次感受中国那个特殊年代人们的所思所感所想所历。久久以来，多次提起这本书，都会让我想起一头牛，它可能是晚年陪伴着福贵的老牛，也可能是《生死疲劳》中转世为牲畜感受社会冷暖的那头老牛。我似乎像马晓军一样，记忆出了差错，但是有幸的是，我“中记忆的毒”不似他那样深，再览一次便能纠正。特此写下一二字，聊以自娱自省，勿忘，勿忘。</p><p><strong>从自序开始</strong></p><p>我很敬重余华先生，《活着》给他带来了更多内心的痛苦，他不得不在和现实的那一层紧张关系之中很长一段时间内成为一个愤怒和冷漠的作家，并一直以一种敌对的态度看待现实。</p><blockquote><p>我曾经希望自己成为一位童话作家，要不就是一位实实在在作品的拥有者，如果我能够成为这两者中的任何一个，我想我内心的痛苦将轻微很多，可是与此同时我的力量也会弱很多。</p></blockquote><p>美国民歌《老黑奴》让余华先生决定写下《活着》：老黑奴经历了一生的苦难，家人都先他而去，而依然友好地对待这个世界，没有一句抱怨的话。</p><blockquote><p>随着时间的推移，我内心的愤怒渐渐平息，我开始意识到一位真正的作家所寻找的是真理，是一种排斥道德判断的真理。作家的使命不是发泄，不是控诉或者揭露，他应该向人民展示高尚。这里所说的高尚不是那种单纯的美好，而是对一切事物理解之后的超然，对善和恶一视同仁，用同情的目光看待世界。</p><p>写作的过程让我明白，人是为了活着本身而活着的，而不是威力活着之外的任何事物所活着。我感到我写下了高尚的作品。</p></blockquote><p><strong>正文</strong></p><p>通过一位去乡间收集民间歌谣的年轻人和晚年福贵树下的交谈，故事开始了——应该说福贵的一生开始了。  </p><p>徐家祖上田产丰富，历来徐老爷都是有身份有地位的大地主，可是徐家出了两个败家子。阔少爷福贵年轻时不学无术，好嫖好赌，不敬尊长，真可谓纨绔子弟，终于在一次与龙二的豪赌中将祖上剩下的全部家产输个干净。徐老爷子让福贵挑着倾家田产房产换来的几担铜钱去还债，回来时福贵肩膀都渗出血来。老爷子也是希望福贵明白这万贯家财一下子挑出去都如此不易，祖宗当年一点一点挣回这些家产那得多难。</p><blockquote><p>从前，我们徐家的老祖宗不过是养了一只小鸡，鸡养大后变成了鹅，鹅养大了变成了羊，再把羊养大，羊就变成了牛。我们徐家就是这样发起来的。</p></blockquote><p>晚年的福贵可能终于明白了自己为什么活着，他和那头老牛一样，知道自己时不久矣，仍拖着年迈的身体，日日耕作，伴星光而眠。</p><blockquote><p>可是我再也没遇到一个像福贵这样令我难忘的人了，对自己的经历如此清楚，又能如此精彩的讲述自己。他是那种能够看到自己过去模样的人，他可以准确地看到自己年轻时走路的姿态，甚至可以自己是如何衰老的。这样的老人在乡间实在难以遇到，也许是困苦的生活损坏了他们的记忆，面对往事他们通常显示得木讷，常常以不知所措的微笑塘塞过去。他们对自己的经历缺乏热情，仿佛是道听途说般的只记得零星几点，即使是这零星几点也都是自身之外的记忆，用一两句话表达了他们所认为的一切。在这里，我常常听到后辈们这样骂他们：</p><p>​    “一大把年纪全活到狗身上去了。”</p></blockquote><p>福贵被抓去充军拉大炮之后，我常常替他担心家里的老母亲和家珍，本来是去找郎中看病结果被抓去充国军，过上了一段颠沛流离，一不小心还会有性命之忧的生活。家珍把所有的钱给了福贵去找郎中，丈夫多年没回来，一个准信都没有，和人间蒸发了无异；母亲因病躺在床上需要照顾，凤霞还小需要照看，还得忙下田做农活还租粮，这样的重担一个妇人家怎么能承受得下来！这段时间生活对她的重压或许也为后面凤霞的失语以及家珍的软骨病埋下了伏笔。这样想着，不觉为家珍感到同情和忧伤。家珍是一个聪慧而又坚强的女人。从家珍身上，我看到了“人对苦难的承受能力”是多么强。相比之下，我们生活中所经历的苦难可能要轻松得多了。</p><p>在国军中拉大炮的生活中，我看到了战争给人带来的道德沦丧和人性恶的一面。几千伤号在无情的口号“一，二，三”之下，扔进土坑，大家都自顾不暇，没有任何一个人伸出救助之手，霎时间，哀鸿遍野。虽到最后声音气若游丝，但其中的悲伤，却越来越浓烈，想胸中涌上来的酒精味，久堵在鼻腔中那般浓烈。</p><p>还有在没有木材生火煮粮食之时，</p><blockquote><p>一些人开始掘坟，用掘出的棺材板烧火。掘出了棺材就把死人骨头在坑外一丢，也不给重新埋了。到了那时候，谁也不怕死人骨头了，夜里就是挨在一起睡觉也不会做噩梦。</p></blockquote><p>虽寥寥数笔，且轻描淡写，却让我感到恐惧。中国人讲究入土为安，掘坟本就是天谴之为，烧了棺木，抛了尸体，之为生火煮粮食，那是一种极致的对人性的冷漠和道德的丧失。但是他们（包括福贵）没有忘记，活着本身。许久之后当他们回到正常甚至优渥的生活环境下之时，或许会感到自己内心深处对自己的谴责，但是他们有可能还活不到那时候哩。</p><p>余华先生常借队长之口对大跃进以及人民公社进行侧面的讽刺，让人不禁发笑：</p><blockquote><p>“省事了吧？这人民公社好不好？”  </p><p>“哭什么，人民公社给你盖新屋。”  </p><p>“这钢铁能造三颗炮弹，全部打到台湾去，一颗打在蒋介石床上，一颗打在蒋介石吃饭的桌子上，一颗打在蒋介石的羊棚里。”</p></blockquote><p>龙二的枪毙也颇有意味。原本福贵是大地主，之后因为好赌将家产输给了龙二，龙二“代替”了福贵当起了大地主，结果解放后被人民政府认为是恶霸地主，被处以枪毙之刑。龙二被枪毙了五枪，这和之前福贵向大地主龙二借了五亩田，冥冥似有某种联系。像是报应，又有作者在其中增添的几分讽刺意味。</p><blockquote><p>“福贵，我是替你去死啊。”  </p><p>我从人堆里挤出去，一个人往外走，走了十来步就听到“砰”的一枪，我想龙二彻底完蛋了，可紧接着又是“砰”的一枪，下面又打了三枪，总共是五枪。</p></blockquote><p>看到有庆，心里充满了温暖。有庆虽自娘胎中开始就常被父亲训斥，但是少年的善良和朝气是训斥不掉。有庆关爱他的那两只羊，每天惺忪着睡眼天没亮就要去割草喂羊，然后再飞奔去学校才能不迟到。也正因为如此，鞋子磨坏得快，家里穷没钱买新鞋给他，顽固的福贵骂他不爱护鞋子，他便每天出门时先小跑一段再脱下鞋子拎着跑去上学。想着有庆光脚丫踩在雪地上吧嗒吧嗒往学校跑，很是心疼。穷人家的孩子懂事早，少年的质朴和善良让我想起了《小鞋子》，那是一部关于十分温暖人心的作品，关于少年，关于善良。无论是含蓄向福贵表示自己想放弃读书帮助家里挣工分，还是得了体育老师的奖励第一时间想到却是将奖励分给家人……这些都让我在这部充满窒息般悲伤味道的作品里感受到一丝丝的温暖，就好似那苦茶水中仅存的一丝甘甜。</p><blockquote><p>有庆把大胖子给他的糖果全放在床上，先是分出了三堆，看了又看后，从另外两堆里各拿出两颗放进自己这一堆，又看了一会，再从自己这堆拿出两颗放到另两堆里。我知道他要把这一堆给凤霞，一堆给家珍，自己留一堆，就是没有我的。谁知道他又把三堆糖弄到一起，分出了四堆，他就这么分来分去，到最后还是只有三堆。</p></blockquote><p>凤霞和我的表姐同名，小时候一个村子玩大的，所以读着有一种特殊的亲切感。看到凤霞被一对老夫妇带走的时候，想到的是他会不会被不怀好意的老人欺负，后面看来没有这种事发生，才松了一口气。凤霞后来说不出话也着实是让我同情，这么懂事孝顺的好女孩，上天就是不愿意让她用语言表达自己的心声。每个人都不是完美的，或者说是有缺陷的。有些缺陷表现在身体上，而有些缺陷隐藏在心里。老天爷让凤霞变成哑巴，但是却让她拥有着一颗纯净的心灵。王四的缺陷就表现在心里。饥荒的时候抢过凤霞找到的地瓜昧着良心说是他先发现的，不得不让人感到愤恨。</p><p>《活着》里面，生与死总是发生在一起，严丝合缝。县长夫人顺利生产的时候，有庆被无良医生抽血而死；二喜儿子来到世间的时候凤霞离开了所有人。不得不让人感到伤心，似乎余华先生刻意这样安排，生的喜悦从来不曾降临到福贵身边。这又一次写出了人对苦难的承受能力。</p><p>有庆的死，让我感到忿恨，也感到一种呛到鼻头的酸楚，那么懂事善良的小男孩，长跑比赛还跑过了比他大很多的高年级学生，上一秒还活蹦乱跳，下一秒身体就一截一截地凉下去，躺在冰冷的医院里。更让人伤心的是福贵悲苦地埋葬了自己的儿子后还编着谎言不希望让家珍知道。然而，家珍在经历这么多苦难的折磨之后，也渐渐明白自己的孩子永远回不来了。一个人死的时候，最大的痛苦是由最爱他的人来承受的。那种彻身的无力感，那种浸透每个细胞的绝望与悲苦，可能一辈子都不想经历哪怕一次。</p><blockquote><p>​    家珍这时轻声说：“福贵，您别骗我了，我知道有庆死了。”</p><p>​    她这么一说，我站在那里动不了，腿也开始发软。我的脖子上越来越湿，我知道那是家珍的眼泪，家珍说：</p><p>​    “让我去看看有庆吧。”</p></blockquote><p>凤霞死的时候，最难受的应该是二喜和福贵了。二喜这辈子最爱的女人是凤霞，福贵这辈子最疼的女人也是凤霞。二喜背着凤霞回家的时候最让我难受，不忍心离开自己心爱的人的那种执着和固执，让人很是难过。</p><blockquote><p>​    那时候天黑了，街上全是雪，人都见不到，西北风呼呼吹来，雪花打在我们脸上，像是沙子一样。二喜哭得声音都哑了，走一段他说：</p><p>​    “爹，我走不动了。”</p><p>​    我让他把凤霞给我，他不肯，又走了几步他蹲了下去，说</p><p>​    “爹，我腰疼的不行了。”</p><p>​    那是哭的，把腰哭疼了。</p></blockquote><p>家珍死前说的一段话，让我很是感动，这样的苦日子，换做别人早就不干了，然而家珍却说下辈子还跟福贵，这是爱情还是亲情，我分不清楚，但是那很浓，浓得怎么都化不开。</p><blockquote><p>​    “这辈子也快过完了，你对我这么好，我也心满意足了，我为你生了一双儿女，也算是报答你了，下辈子我们还要在一起过。”</p><p>​    “凤霞，有庆都死在我前头，我心也定了，用不着再为他们操心，怎么说我也是做娘的女人，两个孩子活着时都孝顺我，做人能做成这样我该知足了。”</p><p>​    “家珍死得很好，死的平平安安，干干净净，死后一点是非都没有留下，不像村里有些女人，死了还有人说闲话。”</p></blockquote><p>再到后来，二喜被水泥板压死了，苦根吃豆子撑死了，只留下福贵一个人在这孤单的世上活着。买了一头和自己差不多老的老牛，终日耕着田，还一边对牛说：</p><blockquote><p>​    “今天有庆，二喜耕了二亩，家珍，凤霞耕了也有七八分田，苦根还小都耕了半亩。你嘛，耕了多少我就不说了，说出来你会觉得我是要羞你。话还得说回来，你年纪大了，能耕这么些田也是尽心尽力了。”</p></blockquote><p>亲人逝去时候，活着的人免不了思念，但大抵只在心中，并不会说出名来，因为那样徒添太多悲伤，怕自己承受不了。而像福贵这样整日整日地念着亲人的名字，就好似他们还在自己身边一样，看上去是乐观，但实际上那背后承载着的巨大的悲伤，我是无论如何也不敢去想象的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;活着，写的是人对苦难的承受能力，和对世界乐观的态度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;近来看了不少大陆“禁片”：李杨导演的《盲山》海外版，姜文导演的《太阳照常升起》和《阳光灿烂的日子》，之后想抽空看看《盲道》以及《鬼子来了》。阅毕，我对50到70年代的中国发
      
    
    </summary>
    
      <category term="文学" scheme="csy1998.com/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="读书笔记" scheme="csy1998.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>swift学习笔记</title>
    <link href="csy1998.com/2018/04/18/11_Swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>csy1998.com/2018/04/18/11_Swift学习笔记/</id>
    <published>2018-04-17T16:00:00.000Z</published>
    <updated>2018-11-13T03:16:37.527Z</updated>
    
    <content type="html"><![CDATA[<h3 id="swift学习笔记"><a href="#swift学习笔记" class="headerlink" title="swift学习笔记"></a>swift学习笔记</h3><h4 id="required修饰符的使用规则"><a href="#required修饰符的使用规则" class="headerlink" title="required修饰符的使用规则"></a>required修饰符的使用规则</h4><ul><li><code>required</code>修饰符只能用于修饰类初始化方法。</li><li>当子类含有异于父类的初始化方法时（初始化方法参数类型和数量异于父类），子类必须要实现父类的<code>required</code>初始化方法，并且也要使用<code>required</code>修饰符而不是<code>override</code>。</li><li>当子类没有初始化方法时，可以不用实现父类的<code>required</code>初始化方法。<a id="more"></a></li></ul><h5 id="enum和struct为值类型，而class为引用类型。值类型内部方法要修改内部成员要加mutating关键字"><a href="#enum和struct为值类型，而class为引用类型。值类型内部方法要修改内部成员要加mutating关键字" class="headerlink" title="enum和struct为值类型，而class为引用类型。值类型内部方法要修改内部成员要加mutating关键字"></a>enum和struct为值类型，而class为引用类型。值类型内部方法要修改内部成员要加mutating关键字</h5><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Count13</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> name: <span class="type">String</span>?</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> c13 = <span class="type">Count13</span>(name: <span class="string">"JoY"</span>)    <span class="comment">// 编译报错 可以在class内部加一个init函数 或者改为struct</span></div></pre></td></tr></table></figure><h4 id="基础："><a href="#基础：" class="headerlink" title="基础："></a>基础：</h4><ul><li>空格规定：运算符不能直接跟在变量或者常量后面</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span>(<span class="string">"<span class="subst">\(x)</span> "</span>, terminator: <span class="string">""</span>)   <span class="comment">//不换行输出 </span></div><div class="line"><span class="keyword">let</span> theInput = <span class="built_in">readLine</span>()  <span class="comment">// 接受用户输入</span></div><div class="line"><span class="keyword">typealias</span> <span class="type">MYInt</span> = <span class="type">Int</span>  <span class="comment">// 类型声明</span></div></pre></td></tr></table></figure><h4 id="数据结构："><a href="#数据结构：" class="headerlink" title="数据结构："></a>数据结构：</h4><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fq6taknctqj30k809xq3s.jpg" alt=""></p><ul><li>小数默认double类型</li><li>类型？声明表示可选类型 </li><li>值！表示强行解析</li><li>类型！声明表示可以自动解析</li><li>运算符取消了++ / —</li><li>先算术运算，后移位运算，最后位运算。请特别注意：1 &lt;&lt; 3 + 2 &amp; 7 等价于 (1 &lt;&lt; (3 + 2))&amp;7</li></ul><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fq6t7zibmij30je0e9dgj.jpg" alt="屏幕快照 2018-04-05 10.44.13"></p><h4 id="一些语法："><a href="#一些语法：" class="headerlink" title="一些语法："></a>一些语法：</h4><ul><li>repeat…while 循环</li><li>switch中的fallthrough : 一个case结束后继续执行下一个case</li><li>String.utf8/16</li></ul><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fq6t7xp11tj30ij0cuab0.jpg" alt="屏幕快照 2018-04-05 10.49.49"></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 数组</span></div><div class="line"><span class="keyword">var</span> someInts = [<span class="type">Int</span>]() </div><div class="line"><span class="keyword">var</span> someInts = [<span class="type">Int</span>](repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">3</span>)  </div><div class="line"><span class="keyword">var</span> someInts:[<span class="type">Int</span>] = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]</div><div class="line"></div><div class="line"><span class="comment">// 字典</span></div><div class="line"><span class="keyword">var</span> oldVal = someDict.updateValue(<span class="string">"One 新的值"</span>, forKey: <span class="number">1</span>)  <span class="comment">// 修改</span></div><div class="line">someDict[<span class="number">1</span>] = <span class="string">"One 新的值"</span></div><div class="line"> </div><div class="line"><span class="keyword">var</span> removedValue = someDict.removeValue(forKey: <span class="number">2</span>)   <span class="comment">// 删除</span></div><div class="line">someDict[<span class="number">2</span>] = <span class="literal">nil</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> dictKeys = [<span class="type">Int</span>](someDict.keys)    <span class="comment">// 转数组</span></div><div class="line"><span class="keyword">let</span> dictValues = [<span class="type">String</span>](someDict.values)</div></pre></td></tr></table></figure><ul><li>函数参数（值传递）一般常量不可改变，加inout 关键字可以将参数变成变量</li></ul><h4 id="闭包（引用类型）："><a href="#闭包（引用类型）：" class="headerlink" title="闭包（引用类型）："></a>闭包（引用类型）：</h4><ul><li><p>闭包形式：</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fq6t80hw5rj30ij039aa9.jpg" alt="屏幕快照 2018-04-05 11.08.37"></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 闭包实例</span></div><div class="line"><span class="keyword">let</span> studname = &#123; <span class="built_in">print</span>(<span class="string">"Swift 闭包实例。"</span>) &#125;</div><div class="line">studname()</div><div class="line"></div><div class="line"><span class="keyword">let</span> divide = &#123;(val1: <span class="type">Int</span>, val2: <span class="type">Int</span>) -&gt; <span class="type">Int</span> <span class="keyword">in</span> </div><div class="line">   <span class="keyword">return</span> val1 / val2 </div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> result = divide(<span class="number">200</span>, <span class="number">20</span>)</div><div class="line"></div><div class="line"><span class="comment">// 闭包表达式</span></div><div class="line"><span class="keyword">let</span> names = [<span class="string">"AT"</span>, <span class="string">"AE"</span>, <span class="string">"D"</span>, <span class="string">"S"</span>, <span class="string">"BE"</span>]</div><div class="line"></div><div class="line"><span class="comment">// 使用普通函数(或内嵌函数)提供排序功能,闭包函数类型需为(String, String) -&gt; Bool。</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">backwards</span><span class="params">(s1: String, s2: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</div><div class="line">    <span class="keyword">return</span> s1 &gt; s2</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> reversed = names.sorted(by: backwards)</div><div class="line"></div><div class="line"><span class="comment">// 或者 var reversed = names.sorted( by: &#123; $0 &gt; $1 &#125; ) 参数名称缩写</span></div><div class="line"><span class="comment">// 或者 var reversed = names.sorted(by: &gt;)  运算符函数</span></div><div class="line"><span class="comment">// 或者 var reversed = names.sorted() &#123; $0 &gt; $1 &#125; 尾随闭包</span></div></pre></td></tr></table></figure></li></ul><h4 id="枚举-结构体-类："><a href="#枚举-结构体-类：" class="headerlink" title="枚举 / 结构体 / 类："></a>枚举 / 结构体 / 类：</h4><h5 id="枚举：（值传递，值类型内部方法要修改内部成员要加mutating关键字）"><a href="#枚举：（值传递，值类型内部方法要修改内部成员要加mutating关键字）" class="headerlink" title="枚举：（值传递，值类型内部方法要修改内部成员要加mutating关键字）"></a>枚举：（值传递，值类型内部方法要修改内部成员要加mutating关键字）</h5><ul><li>可以实例化</li><li>可以定义构造函数</li><li>可以遵守协议</li></ul><h5 id="结构体：（值传递，值类型内部方法要修改内部成员要加mutating关键字）"><a href="#结构体：（值传递，值类型内部方法要修改内部成员要加mutating关键字）" class="headerlink" title="结构体：（值传递，值类型内部方法要修改内部成员要加mutating关键字）"></a>结构体：（值传递，值类型内部方法要修改内部成员要加mutating关键字）</h5><h5 id="类："><a href="#类：" class="headerlink" title="类："></a>类：</h5><ul><li>区别于结构体的特征：可以继承 / 引用类型</li><li>!== 和 === 判定两个引用相等或者不相等（若是同时引用一个类则是相等）</li></ul><h4 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fq6t7yi6ehj30jc03sjrn.jpg" alt="屏幕快照 2018-04-05 11.25.55"></p><ul><li>延迟属性：第一次调用的时候才会计算初始值，lazy标记，必须声明为变量lazy var</li><li>计算属性：不直接存储值，getter（获取值）/ 可选的 setter （间接设置其他属性或变量的值）</li><li>属性观察器：willlSet(设置新值之前调用) / didSet（设置之后调用），初始化中不会调用</li><li>类型方法（静态方法）：枚举和结构体（static）/ 类（class）</li><li>下标注脚subscript</li></ul><hr><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><h4 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h4><h5 id="继承：override重写-final-防止重写"><a href="#继承：override重写-final-防止重写" class="headerlink" title="继承：override重写 / final 防止重写"></a>继承：override重写 / final 防止重写</h5><h5 id="构造："><a href="#构造：" class="headerlink" title="构造："></a>构造：</h5><ul><li>便利构造器convenience：调用同一个类中的指定构造器，并为其参数提供默认值。弱化的init函数，提供默认参数值。</li><li>可失败构造器：init?()  / ini!()</li></ul><h5 id="析构：deinit"><a href="#析构：deinit" class="headerlink" title="析构：deinit"></a>析构：deinit</h5><h5 id="可选链：多个？类型构成链，其中任何一个为nil那么整体就nil"><a href="#可选链：多个？类型构成链，其中任何一个为nil那么整体就nil" class="headerlink" title="可选链：多个？类型构成链，其中任何一个为nil那么整体就nil"></a>可选链：多个？类型构成链，其中任何一个为nil那么整体就nil</h5><h5 id="自动引用计数（ARC）："><a href="#自动引用计数（ARC）：" class="headerlink" title="自动引用计数（ARC）："></a>自动引用计数（ARC）：</h5><ul><li>若引用weak / 无主引用unowned避免强引用带来循环定义</li><li>弱引用和无主引用允许循环引用中的一个实例引用另外一个实例而不保持强引用。实例能够互相引用而不产生循环强引用。</li><li>弱引用：生命周期中会变为nil的实例使用</li><li>无主引用：初始化赋值后再也不会被赋值为nil的实例使用。</li></ul><h5 id="类型转换："><a href="#类型转换：" class="headerlink" title="类型转换："></a>类型转换：</h5><ul><li>is 用于检测值的类型，as 用于转换类型（as? / as!）</li><li><code>AnyObject</code>可以代表任何class类型的实例</li><li><code>Any</code>可以表示任何类型，包括方法类型（function types）</li></ul><h5 id="扩展（extension）：向一个已有的类、结构体或枚举类型添加新功能，不能重写"><a href="#扩展（extension）：向一个已有的类、结构体或枚举类型添加新功能，不能重写" class="headerlink" title="扩展（extension）：向一个已有的类、结构体或枚举类型添加新功能，不能重写"></a>扩展（extension）：向一个已有的类、结构体或枚举类型添加新功能，不能重写</h5><h5 id="协议："><a href="#协议：" class="headerlink" title="协议："></a>协议：</h5><ul><li>属性必须指明只读 / 可读可写</li><li>协议里有init函数，则协议子类必须有required init</li><li>多继承</li><li>类专属协议</li><li>协议合成：&amp;</li><li>协议检查：is / as</li></ul><h5 id="泛型：（数组-字典属于泛型集，泛型类似于函数模版）"><a href="#泛型：（数组-字典属于泛型集，泛型类似于函数模版）" class="headerlink" title="泛型：（数组/字典属于泛型集，泛型类似于函数模版）"></a>泛型：（数组/字典属于泛型集，泛型类似于函数模版）</h5><h5 id="访问控制：（默认的访问级别-internal）"><a href="#访问控制：（默认的访问级别-internal）" class="headerlink" title="访问控制：（默认的访问级别 internal）"></a>访问控制：（默认的访问级别 internal）</h5><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fq6t81e1z7j30m4064aax.jpg" alt="屏幕快照 2018-04-05 15.26.10"></p><p>泛型类型或泛型函数的访问级别取泛型类型、函数本身、泛型类型参数三者中的最低访问级别。</p><h4 id="高级操作"><a href="#高级操作" class="headerlink" title="高级操作"></a>高级操作</h4><h5 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h5><h5 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h5><h5 id="自定义运算符"><a href="#自定义运算符" class="headerlink" title="自定义运算符"></a>自定义运算符</h5>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;swift学习笔记&quot;&gt;&lt;a href=&quot;#swift学习笔记&quot; class=&quot;headerlink&quot; title=&quot;swift学习笔记&quot;&gt;&lt;/a&gt;swift学习笔记&lt;/h3&gt;&lt;h4 id=&quot;required修饰符的使用规则&quot;&gt;&lt;a href=&quot;#required修饰符的使用规则&quot; class=&quot;headerlink&quot; title=&quot;required修饰符的使用规则&quot;&gt;&lt;/a&gt;required修饰符的使用规则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;required&lt;/code&gt;修饰符只能用于修饰类初始化方法。&lt;/li&gt;
&lt;li&gt;当子类含有异于父类的初始化方法时（初始化方法参数类型和数量异于父类），子类必须要实现父类的&lt;code&gt;required&lt;/code&gt;初始化方法，并且也要使用&lt;code&gt;required&lt;/code&gt;修饰符而不是&lt;code&gt;override&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;当子类没有初始化方法时，可以不用实现父类的&lt;code&gt;required&lt;/code&gt;初始化方法。
    
    </summary>
    
      <category term="计算机" scheme="csy1998.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="编程学习" scheme="csy1998.com/tags/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>搏击俱乐部</title>
    <link href="csy1998.com/2017/07/07/9_%E6%90%8F%E5%87%BB%E4%BF%B1%E4%B9%90%E9%83%A8/"/>
    <id>csy1998.com/2017/07/07/9_搏击俱乐部/</id>
    <published>2017-07-06T16:00:00.000Z</published>
    <updated>2018-11-12T12:25:14.516Z</updated>
    
    <content type="html"><![CDATA[<p>前天晚上看完《霍比特人—意外之旅》后，瞧了瞧表，还有一部电影的时间，于是就把存在云盘好久了的《Fight Club》拎出来了。说实话，听名字挺打不起观影欲望的，但是室友强推，就一直存到现在也没删。</p><p>《搏击俱乐部》是大卫芬奇的电影，由爱德华诺顿和布拉德皮特主演。杰克患有严重的失眠症，常常分不清楚现实与梦境，对现实充满了怀疑与厌恶。生存下去靠的是外界的物质(工资)与标签（员工证），唯一让他感到快乐的事——收集家具，各种精美的家具—实际上这可以看作他在现实中唯一活着的证明。一个靠着家具寻找慰藉的上班族，灵魂早已在现实中被撕裂。<br></p><p>You’re not your job.<br>You’re not how much money you have in the bank.<br>You’re not the car you drive.<br>You’re not the contents of your wallet.<br>You’re not your fucking khais.<br>You’re the all-singing, all-dancing crap of the world.</p><p>后来杰克遇到了泰勒。一个彻头彻尾的反物质，反秩序，反体制者。深夜的酒吧门前，“尽你全部的力气，打我一拳”，就这样鼻青脸肿的两个人开创了fight club。在奋力的搏击中，杰克渐渐明白什么是生活，明白自己为何深陷自由的牢笼。<br></p><p>“不管你拥有什么，到头来只会钳制你、羁绊你。唯有失去一切，才能重获自由。”<br></p><p>杰克羡慕泰勒能够抛开物质，真正活出自己，即使是极端的方式。然而，那其实是他自己理想的样子，杰克在逐渐毁灭的生活中塑造出了泰勒，希望通过他改变自己的生活。杰克也的确在一步步发生改变。但在逐渐明白自己其实就是泰勒之后，他又亲手毁灭了泰勒。两面人回到一面人。一片爆炸声中，杰克牵着玛拉的手静静站在玻璃窗前，失去了一切，重获了自由。<br></p><p>泰勒死了，或者说他就从来没有存在过。但是有一些话，却是怎么也忘不了。<br></p><p>“XX，XX街XX号。……告诉我，你的梦想是什么？反正你要死了，你想要干什么？”<br><br>“兽医。”<br><br>“很好，现在滚回去。一周后我回会来检查的，看你是不是真的干了兽医。如果不是，我就崩了你。我知道你住哪里，你的家人。”<br><br>……<br><br>“我相信，明天将是他度过的最美好的一天。”<br></p><p>影片还有诸多疑点，比如玛拉到底是不是也是他分裂出来的人格？BOb是不是其实也是他？搏击俱乐部的所有是不是也是他？炸掉的笑脸大楼和他自己的公寓是不是同一栋？……这些都是很有趣的地方。<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前天晚上看完《霍比特人—意外之旅》后，瞧了瞧表，还有一部电影的时间，于是就把存在云盘好久了的《Fight Club》拎出来了。说实话，听名字挺打不起观影欲望的，但是室友强推，就一直存到现在也没删。&lt;/p&gt;
&lt;p&gt;《搏击俱乐部》是大卫芬奇的电影，由爱德华诺顿和布拉德皮特主演。
      
    
    </summary>
    
      <category term="电影" scheme="csy1998.com/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="读书笔记" scheme="csy1998.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>权利的游戏-1</title>
    <link href="csy1998.com/2017/06/27/8_%E6%9D%83%E5%88%A9%E7%9A%84%E6%B8%B8%E6%88%8F-1/"/>
    <id>csy1998.com/2017/06/27/8_权利的游戏-1/</id>
    <published>2017-06-26T16:00:00.000Z</published>
    <updated>2018-11-12T12:25:08.227Z</updated>
    
    <content type="html"><![CDATA[<p>之前把权力的游戏TV版看到了第六季，受室友推荐，决定捡起书本来看，因为即使电视剧拍的再好，文字还是最能激发想象力的媒介。四月的时候买了第一卷，在团校活动的时候开始看第一本，之后因为某些不知名的原因就没继续看了，直到放假的今天决定重新捡起来。<br></p><p>我期待书本中会出现不同于电视剧的精彩情节，或是出现一些剧中因为制作原因而被乔治大叔删掉的情节，然而今天读完我失望了。我到现在几乎没有发现书本和电视剧不同的情节或是删掉的情节，如果实在要说出一两处不同于原著的地方的话，可能也只有雪诺被守夜人新手最初报复的情节了。剧中是小恶魔帮他解围，而在书本中则是武器房的管理者解的围。其实仔细想想，呈现在荧幕上的话，我更认同剧中的做法，让小恶魔来解围更能生动刻画这个有头脑的侏儒角色：善于察言观色，本性善良，因为相貌被父亲和姐姐忌恨却并没有充满仇恨，对现实社会拥有深刻的认识。“不因为害怕面对现实而否认真相”。这一点我很喜欢。<br></p><p>乔治笔下的人物都很真实，每个人都非常有个性特点，都是立在纸面上的人。每个人似乎都是一个矛盾体，矛盾冲突中自显个性。冰原狼是作品中很精妙的设置，每一只冰原狼的死亡，都或多或少意着一些东西，而作者故意不写出来，全放到剧情中让读者去理解。“淑女”被自己的父亲艾德亲手杀掉的那一刻，就是姗莎陷入王宫噩梦的起点，一切都是她的性格造成的。既然对乔弗里抱有一丝爱恋而选择在众人面前拒绝承认真相，必然就要承担其带来的后果。而“夏天”名字的由来，似乎又隐隐在透露着布兰不平凡的使命——结束冬天，迎接夏天。<br></p><p>惊叹于电视剧与原著无论是在人物刻画还是剧情上高度一致的同时，脑子中时时浮现出史塔克家族的族语——凛冬将至。很期待接下来的故事。<br></p><p>晚安。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前把权力的游戏TV版看到了第六季，受室友推荐，决定捡起书本来看，因为即使电视剧拍的再好，文字还是最能激发想象力的媒介。四月的时候买了第一卷，在团校活动的时候开始看第一本，之后因为某些不知名的原因就没继续看了，直到放假的今天决定重新捡起来。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我期待书本
      
    
    </summary>
    
      <category term="文学" scheme="csy1998.com/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="读书笔记" scheme="csy1998.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>神们自己</title>
    <link href="csy1998.com/2017/06/26/7_%E7%A5%9E%E4%BB%AC%E8%87%AA%E5%B7%B1/"/>
    <id>csy1998.com/2017/06/26/7_神们自己/</id>
    <published>2017-06-25T16:00:00.000Z</published>
    <updated>2018-11-12T12:25:03.757Z</updated>
    
    <content type="html"><![CDATA[<p>放假以来的第三本书，幸好是一本科幻小说，看得也比较快。看着即将回家的室友书架上有这本书，随手看看简介觉得很牛逼呀，“阿西莫夫最经典的长篇科幻小说”“享有世界级科幻最高荣耀的三奖之作（星云奖 雨果奖 轨迹奖）”。于是就入坑了。<br></p><p>开篇就是两个放射化学家的撕逼，各种机缘巧合下，“恶人当道”般一个蹩脚但很会写科普文的哈兰姆一手创建了电子通道，从平行宇宙获取免费纯净的能源，造福了大批愚蠢懒惰的人类。于是当然就有人不服，而且还是各种被哈兰姆迫害的科学家——拉蒙特和狄尼森。严谨通过热力学第二定律证明了太阳将要爆炸，人类要全灭。于是很正常地，一个不敢说话，一个大肆宣扬被当成疯子。<br></p><p>中篇比较有意思，作者“造”出了那个平行世界，一个强相互作用比地球大得多的宇宙。这个宇宙恒星很小，几乎没有卫星，行星是一个由情者，理者，抚育者以及长老构成的文明世界。步步推进，一点一点填坑般叙述。这部分想象还是很丰富的。虽然我觉得很多细节没有写得很到位，没能更好地把这个世界“立在纸上”，而不是一般化地只是将想象平铺直叙般写出来。<br></p><p>后面的结尾部分就开始写月球殖民地上地球人和月球人勾心斗角的撕逼以及看狄尼森如何大显神通从一个五十多岁的放射化学家成功转型为一个超级牛逼震撼地球的伟大物理学家。这部分写的真是搞笑，勾心斗角没有想象中那种激烈开脑洞，简单得每个人就像一张白纸，一眼直接望穿，人物关系简单得不能再简单，数来数去就四个人，四个人就上演了一场宇宙级别的生存拉锯战？最牛逼的还是狄尼森，就靠一个小盒子一样的介子仪，在月球表面鼓捣鼓捣几个简单实验，各种误差不管还各种成功，想想他还是一个物理完全自学的化学老头，难道地球和月球上那些物理科学家都死光了？最后一篇报告轰动世界还抱得美人归，嗯，很棒的happy ending，这很科幻。<br></p><p>还是不太行呀，这样子的剧情，你如何叫我不摔书？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;放假以来的第三本书，幸好是一本科幻小说，看得也比较快。看着即将回家的室友书架上有这本书，随手看看简介觉得很牛逼呀，“阿西莫夫最经典的长篇科幻小说”“享有世界级科幻最高荣耀的三奖之作（星云奖 雨果奖 轨迹奖）”。于是就入坑了。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;开篇就是两个放射化学家的撕
      
    
    </summary>
    
      <category term="文学" scheme="csy1998.com/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="读书笔记" scheme="csy1998.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>庆祝无意义</title>
    <link href="csy1998.com/2017/06/25/5_%E5%BA%86%E7%A5%9D%E6%97%A0%E6%84%8F%E4%B9%89/"/>
    <id>csy1998.com/2017/06/25/5_庆祝无意义/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2018-11-12T12:24:10.902Z</updated>
    
    <content type="html"><![CDATA[<p>一大早饭都没吃就开始看昆德拉的《庆祝无意义》，其实是昨天的重庆火锅到今天都还没有消化好，肚子痛了好几次。<br> </p><p>前面两节看得发困，两节过后才开始呈现出主要情节。两个小时一边发困一边读，效率有点低。下午脑子清楚了些，看得就顺畅多了。<br> </p><p>阿兰，拉蒙，夏尔，凯列班是全书的四个主角，但是看下来感觉对斯大林，赫鲁晓夫以及拉弗朗克印象最为深刻。因为他们喜剧性质最为突出，形象刻画相对丰富。斯大林关于二十四只鹧鸪的故事，赫鲁晓夫的造反，拉弗朗克大口嚼着食物举着手踏着舞步，小羽毛在拇指和食指之间。这三个相比主角更让我印象深刻。夏娃的树也是一个精彩片段。“我梦见的不是人类历史的终结，不是未来的一笔勾销，不，不，我期盼的是人的完全消失，带着他们的未来与过去，带着他们的起始于结束，带着他们存在的全过程，带着他们所有的记忆，带着他们所有的记忆”。<br></p><p>关于主角，阿兰对着肚脐出神。大腿修长而迷人，拥有无限魅力；臀部粗暴快活而且刺激；乳房象征女性的神圣。那么肚脐呢？怎么定义一个男人或者一个时代的情色，当他或它在人体中央肚脐上看到女人的诱惑中心呢？拉蒙放弃夏加尔画展选择在公园里闲逛。夏尔看了老师送的赫鲁晓夫的《回忆录》,发现斯大林被人误解的温情想写一部木偶剧。凯列班明明会说法语却坚持在酒会上把自己当成巴基斯坦人，与别人进行两种语言的交流。每个人似乎都在做着无意义的事，尔每个人似乎又都向达德洛一般撒下不可解释的谎言，认为“接受庆贺的幸福胜过了年华老去的羞愧”，追求形式所赋予的意义，即使本身毫无意义。<br></p><p>结局处，卢森堡公园里的斯大林和加里宁上演的闹剧以及儿童合唱团排成半圆唱《马赛曲》的情节真是让人难忘。“我的朋友，呼吸我们周围的无意义，它是智慧的钥匙，他是好心情的钥匙”“无意义，我的朋友，这是生存的本质。它到处，永远跟我们形影不离。甚至出现在无人可以看见它的地方：在恐怖时，在血腥斗争时，在大苦大难时。”<br></p><p>讲实话，刚刚看完的那一刻，我并不知道昆德拉想表达的是什么，全文看上去有点混乱，配角比主角刻画细致，不时插入关于哲学命题的思考，这更加大了我理解这部作品的难度。豆瓣上各种评论都有，有说精妙绝伦的，也有说这就是草稿作品的。我不知道真相是什么，或许那对我来说并不重要，本来就是一厢情愿的事，为何纠结于模糊不清甚至有可能并不存在的所谓“真相”呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一大早饭都没吃就开始看昆德拉的《庆祝无意义》，其实是昨天的重庆火锅到今天都还没有消化好，肚子痛了好几次。&lt;br&gt; &lt;/p&gt;
&lt;p&gt;前面两节看得发困，两节过后才开始呈现出主要情节。两个小时一边发困一边读，效率有点低。下午脑子清楚了些，看得就顺畅多了。&lt;br&gt; &lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="文学" scheme="csy1998.com/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="读书笔记" scheme="csy1998.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>爱你就像爱生命</title>
    <link href="csy1998.com/2017/06/25/6_%E7%88%B1%E4%BD%A0%E5%B0%B1%E5%83%8F%E7%88%B1%E7%94%9F%E5%91%BD/"/>
    <id>csy1998.com/2017/06/25/6_爱你就像爱生命/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2018-11-12T12:24:14.785Z</updated>
    
    <content type="html"><![CDATA[<p>第一部分都是王小波写给李银河的“爱情信”，几十封看下来，我就看出了两个字：爱你。不愧是写情书的圣手，爱你两个字能写出这么多的花样。讲实话，看前面还好，还能看出一些有名又经典的句子。越看到后面就越感觉没多少意思。看来看去都是爱死你想死你，你快来抚慰我寂寞的心灵，我的灵魂需要你来拥抱什么的，都不敢多想，光是看看就觉得怪肉麻的。而且全都是小波单方面写的信，没看到李银河的回信，未免有些单调。不过一个主题还能写这么久，也是够拼的。<br></p><p>到了第二部分，就是小波和李银河两个人的信了。这个比较有意思，可以看出来两个人非常相爱，但是有一点就是王小波的信我看的有些不是很懂，感觉有些句子上下逻辑对不上，看得有些混乱，不知道想表达些什么。相比之下，李银河的信更想是现代的文字，通顺连贯，意思明确，而我也就比较喜欢这样的文字，不在连贯上造成阅读障碍，只在文字背后的意义上下功夫表达自己的意思。<br></p><p>第三部分，是它结婚之后和留学美国以及回国后工作期间与朋友同事的通信。可以看出来语言风格大变样，毕竟不再是写“情书”一样的信了。不过在连贯上我还是觉得小波的文字不好读。而且内容大多是关于工作的，感觉没什么意思，匆匆看了一遍就过了。<br></p><p>第四部分，未竟稿。《鬼营》和《王仙客寻无双记》写的不错，其他有些都是黄金时代和白银时代里的片段内容，我不知道编辑为啥要把重复的东西放进来，单纯增加本书的页数？况且摘得都是片段，乱七八糟的。估计是把之前的稿子都原封不动地放上来了，但是这一部分明显和书名不搭，不知道编辑咋想的，反正我看着后面重复（或者说变化不大）且混乱的内容，心里是有点不爽的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一部分都是王小波写给李银河的“爱情信”，几十封看下来，我就看出了两个字：爱你。不愧是写情书的圣手，爱你两个字能写出这么多的花样。讲实话，看前面还好，还能看出一些有名又经典的句子。越看到后面就越感觉没多少意思。看来看去都是爱死你想死你，你快来抚慰我寂寞的心灵，我的灵魂需要你
      
    
    </summary>
    
      <category term="文学" scheme="csy1998.com/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="读书笔记" scheme="csy1998.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数学之美</title>
    <link href="csy1998.com/2017/06/13/4_%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/"/>
    <id>csy1998.com/2017/06/13/4_数学之美/</id>
    <published>2017-06-12T16:00:00.000Z</published>
    <updated>2018-11-12T12:23:41.540Z</updated>
    
    <content type="html"><![CDATA[<p>吴军老师是一个好写手，或者可以用今天的话来说是一个好作家，我非常喜欢他的文字。<br></p><p>前不久刚刚看完他写的《数学之美》，真的是一本写的很棒的书，用最通俗易懂的语言给我展现了一个个数学原理支撑起来的精美包装美丽的盒子。大多数人都只在意其光鲜靓丽的表面，很少会去思考盒子里面到底是什么，或没有兴趣，或太难以理解。就比如我们生活常用的搜狗输入法，常用的Google搜索引擎，网页广告投放，网络安全密码等等。我们时刻在体验着这些东西带来极大便利，但是要说出个所以然，其实还是个不简单的问题。我之前也感兴趣过，对这些生活中习以为常的科技产品，但宥于当时知识水平有限条件不足没能追究根本地去好好了解，直至到了大学。<br></p><p>说起来也是巧合，当时好像在看一些文学作品什么的，每天也就读十几页，进度及其缓慢，那时候差不多花了一个月才读完那本就不厚的《刻意练习》（安德烈）和《我们生活在巨大的差距里》（余华），后来期中季，一个复旦的同学要我推荐一些关于自然语言处理以及机器智能的书，我搜了Google,知乎，豆瓣，问了同学，问了导师，终于挑出几本称得上著作的书，期中就有吴军老师的《数学之美》。于是仔细核对后火急火燎地就把推荐的书单发了过去。之后就想起来。室友推荐了《数学之美》，导师也推荐了这本书，当时把这本书看作“枯燥无味的数学理论书”的想法开始发生了一点动摇，于是决定好歹自己买一本来看看，毕竟导师都推荐了它，想必该有两把刷子。之后过不太久，恰逢当当搞半价活动，索性就买了回来。<br></p><p>不得不佩服吴军老师的语言功底，我读这本书上手很快，思考也比较多，里面的一些公式也是很花心思地去仔细推导，想更好地通过吴军老师的文字去感受他所感受到的以及他希望我们感受到的那份数学的美，数学精妙的魅力。我收获很大，也因此开始了解吴军老师这个人，一位令我尊敬的人。<br></p><p>看完《数学之美》，我对平时一直在用的科技产品开始有了新的看法，原来是看作一个精美包装的黑匣子，而今不敢说完全了解了这个黑匣子，但也增加我对其内在数学原理的魅力的进一步认识。<br></p><p>我是个看人读书的人，跟定一个人读他的好书。从书后的其他书目推荐上，我看到了吴军老师其他同样有名的书，于是开始了《大学之路》的阅读。而今天刚刚读完上册，收获颇多。最起码的，我不再是原来那个对国外大学几乎一无所知的纯小白了。透过吴军老师的视野，我开始了解更多关于国外高等教育学府的资讯。书中我很喜欢的一个片段就是他对高校财政状况与运行机制的解释与解读，原来国外的高校的财政是这样运作的，之前的我肯定不会想到这些。可以说，他的这些文字开启了我对经济最初的认识。对于这一点，我很感谢吴军老师。<br></p><p>似乎每一篇都要有结尾？好吧————————————————————————————————<br></p><p>很棒的作品，更棒的人。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;吴军老师是一个好写手，或者可以用今天的话来说是一个好作家，我非常喜欢他的文字。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;前不久刚刚看完他写的《数学之美》，真的是一本写的很棒的书，用最通俗易懂的语言给我展现了一个个数学原理支撑起来的精美包装美丽的盒子。大多数人都只在意其光鲜靓丽的表面，很少会去
      
    
    </summary>
    
      <category term="计算机" scheme="csy1998.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="读书笔记" scheme="csy1998.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hugin</title>
    <link href="csy1998.com/2017/06/12/3_Hugin/"/>
    <id>csy1998.com/2017/06/12/3_Hugin/</id>
    <published>2017-06-11T16:00:00.000Z</published>
    <updated>2018-04-27T02:53:47.736Z</updated>
    
    <content type="html"><![CDATA[<p>今天下午不想做数学，跑去五四打篮球，然后各种帮助敌方超神，我觉得自己宛如一个智障。<br></p><p>这一个月以来，自己一个人背着个书包，吃完饭就跑去打球差不多有七八次，然而每一次都是乘兴而去，哀叹而归，每一次的表现都不尽如人意。今天也是，几乎每一个和我对垒的人，都完成了超神，都成了全场最佳，我被当成软柿子捏，最软的柿子。于是我开始思考，为什么越打越差，最初的想法是没有热身运动。篮球这种运动对我而言是一项非常讲究赛前感觉的运动，如果没有对战前的热身运动就直接上场，后果就是像今天这样，各种被别人丢来丢去，被别人牵着鼻子走，打得很狼狈不说，心情也极差。根本就违背了我最初最这件事的意愿。我是想放松来着，结果更加倍感压力。或许还是书里说的有道理，刻意练习才是提高水平的最佳方式。看起来我是在花很多时间在打球，可这根本不能提高我的水平，反而隐隐有下降的趋势。可能最佳的练习方式就是像老司机一样，自己一个人抱着球去球场打，大多时候都是自己一个人练习，练习运球，练习投篮。或许这才是刻意练习的第一步，而不是像富兰克林练习国际象棋那样。<br></p><p>今天一起打的几乎都是一些老师教授，感觉上他们经常一起打球，相互都很熟。但有一点不好，有点功利性，老是指挥我。只传球给自己觉得好的人，对他们希望比较大，而没有经过热身的我，则大部分时间都是晾在外线，很不爽的感觉。我还是喜欢和同龄的年轻人一起打，没有压力，很痛快的打。<br></p><p>总结下来就两点：<br><br>1 一定要热身！！！尽量不打组，多自己练习。<br><br>2 尽量不要和年龄大的人打球，他们会让你很不爽。<br></p><p>明天高数期末，祝我好运。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天下午不想做数学，跑去五四打篮球，然后各种帮助敌方超神，我觉得自己宛如一个智障。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;这一个月以来，自己一个人背着个书包，吃完饭就跑去打球差不多有七八次，然而每一次都是乘兴而去，哀叹而归，每一次的表现都不尽如人意。今天也是，几乎每一个和我对垒的人，都完成
      
    
    </summary>
    
    
      <category term="杂俎" scheme="csy1998.com/tags/%E6%9D%82%E4%BF%8E/"/>
    
  </entry>
  
  <entry>
    <title>Sleipnir</title>
    <link href="csy1998.com/2017/06/05/2_Sleipnir/"/>
    <id>csy1998.com/2017/06/05/2_Sleipnir/</id>
    <published>2017-06-04T16:00:00.000Z</published>
    <updated>2018-11-12T12:25:52.653Z</updated>
    
    <content type="html"><![CDATA[<p>今天上知乎搜索个人博客想着看看能看到什么新奇的内容，结果却发现了翁天信这个“异类”。<br></p><p>他的个人博客非常好看，简洁大方，内容丰富，可以说是我目前见过的最好的了。<br></p><p>说起翁天信，我们首先会想到信天翁，一种可以横阔太平洋的海鸟。而他就是在用脚步作翅膀，用相机作眼睛，像一只信天翁一样以走读的方式在这个世界学习。仅上过两个星期学的他，被父亲领回家，开始了homeschooler的生活。十几年来通过自学学会了很多东西，摄影，平面设计，网页开发，iOS应用开发，编程等。最难的是他通过个人博客以及个人摄影网站等的开发制作，非常好地融汇其所学并展示出来，到2015年为止一直坚持一年一个新版本。这一点我很佩服。<br></p><p>今天算是观摩大神了，还有很多东西要学，一点一点来吧。先从期末考试开始。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天上知乎搜索个人博客想着看看能看到什么新奇的内容，结果却发现了翁天信这个“异类”。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;他的个人博客非常好看，简洁大方，内容丰富，可以说是我目前见过的最好的了。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;说起翁天信，我们首先会想到信天翁，一种可以横阔太平洋的海鸟。而他就是在
      
    
    </summary>
    
      <category term="博客" scheme="csy1998.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="杂俎" scheme="csy1998.com/tags/%E6%9D%82%E4%BF%8E/"/>
    
  </entry>
  
  <entry>
    <title>Droupnir</title>
    <link href="csy1998.com/2017/06/04/1_Droupnir/"/>
    <id>csy1998.com/2017/06/04/1_Droupnir/</id>
    <published>2017-06-03T16:00:00.000Z</published>
    <updated>2018-11-12T12:25:41.222Z</updated>
    
    <content type="html"><![CDATA[<p>今天终于在Mac上把个人博客做好了。<br></p><p>弄了两天，各种教程都试了好几遍,都没用，没办法还在简书上请教大神，但是还没等大神回复我，我就已经发现原来是自己的无后缀文件在转格式的时候出现错误，这个小小的差错导致的直接后果就是我不得不花了上差不多6到8个小时来解决它。在折腾博客的过程中，我不知道我是否值得这么多的时间在期末周来做这件事。有时候心里想做一件事，骨子里的那种偏执就显现无遗。<br></p><p>谈起做个人博客的动机，可能就是希望在这个被01充斥的世界设置自己的一片空间，看自己的成长，看自己心中少年的愤怒，看自己虚伪皮囊下残余的真实。<br></p><p>活了这么久，我始终都不懂自己是怎样的一种存在，不知道自己是怎样，不知道自己该怎样，不知道所谓拥有个人意志和独立人格是怎样的一番境界，不知道世界之何为世界，时间之何为时间。有人说阅读或许可以找到答案，因为那里有无数先辈们探索这个世界后留下来的东西。于是我开始尝试，后来我觉得自己生命中缺少一些东西，但是我不知道那是什么。我感觉到自己如果要明白自己心中的困惑，就必须去寻找它。它可能是一个人，可能是一场演唱会，可能是一堂课，可能是一次葬礼，还可能是一片海滩，一只猫咪，一颗青树……我不知道。<br></p><p>我不知道它是什么，不知道它在哪里，不知道它什么时候会出现，我不知道我能不能等到它出现，我时间不多了，我不能光等着，我应该去找找看。在学校的社团中找找看，在深夜的天空中找找看，在沙漠中和海滨上找找看，在和身边的人的谈话中找找看，在路边的猫咪上找找看，在每一堂课上找找看……<br></p><p>夜深了，止笔吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天终于在Mac上把个人博客做好了。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;弄了两天，各种教程都试了好几遍,都没用，没办法还在简书上请教大神，但是还没等大神回复我，我就已经发现原来是自己的无后缀文件在转格式的时候出现错误，这个小小的差错导致的直接后果就是我不得不花了上差不多6到8个小时来解
      
    
    </summary>
    
      <category term="博客" scheme="csy1998.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="杂俎" scheme="csy1998.com/tags/%E6%9D%82%E4%BF%8E/"/>
    
  </entry>
  
</feed>
